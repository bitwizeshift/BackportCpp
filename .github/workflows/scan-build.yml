name: "Scan Build"

on:
  push:
    branches: [master]
    paths:
      - 'include/**.hpp'
      - 'test/**.cpp'
      - '**.cmake'
      - 'conanfile.py'
      - 'CMakeLists.txt'
      - 'test/CMakeLists.txt'
      - '.github/workflows/scan-build.yml'
  pull_request:
    branches: [master]
    paths:
      - 'include/**.hpp'
      - 'test/**.cpp'
      - '**.cmake'
      - 'conanfile.py'
      - 'CMakeLists.txt'
      - 'test/CMakeLists.txt'
      - '.github/workflows/scan-build.yml'

jobs:
  scan:
    runs-on: ubuntu-20.04

    env:
      build-directory: build
      artifact-directory: scan-result

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Prepare Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y clang clang-tools g++-multilib
          python -m pip install --upgrade pip
          pip install conan cpp-coveralls
          cmake -E make_directory ${{env.build-directory}}
          cmake -E chdir ${{env.build-directory}} conan install ..

      - name: Configure
        working-directory: ${{env.build-directory}}
        run: |
          scan-build -o ../${{env.artifact-directory}} cmake ..               \
            -DCMAKE_BUILD_TYPE=Debug                                          \
            -DBACKPORT_COMPILE_UNIT_TESTS=On

      - name: Scan
        working-directory: ${{env.build-directory}}
        run: |
          scan-build -o ../${{env.artifact-directory}} cmake --build .

      - uses: actions/upload-artifact@v2
        with:
          name: Scan Results
          path: ${{env.artifact-directory}}/
